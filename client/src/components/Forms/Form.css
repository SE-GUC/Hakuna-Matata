/* 
onChange(e) {
    this.setState({ [e.target.name]: e.target.value })
  }
  handleClickClose(e) {
    this.setState({ isClickSignup: false })
    this.setState({ isClickLogin: false })


  }
  handleClickLogin(e) {
    if (this.state.isClickSignup) {
      this.setState({ isClickSignup: !this.state.isClickSignup })
    }
    this.setState({ isClickLogin: !this.state.isClickLogin })
  }
  handleClickSignup(e) {
    if (this.state.isClickLogin) {
      this.setState({ isClickLogin: !this.state.isClickLogin })
    }
    this.setState({ isClickSignup: !this.state.isClickSignup })
  }

  handleSubmitSignUp(event) {

    event.preventDefault();
    if (this.state.newPassword === this.state.newRePassword) {
      axios.post(`http://localhost:3333/users/register`, {
        email: this.state.newEmail,
        password: this.state.newPassword,
        fullName: 'Ali Mohamed'
      }).then(res => {
        
      })
    } else {
      alert('the passwords Dont match')
    }

  }
  handleSubmit(event) {

    event.preventDefault();
    axios.post(`http://localhost:3333/users/login`, {
      email: this.state.email,
      password: this.state.password
    }).then(res => {
      this.setState({
        redirect: res.data
      })
      console.log(res.data)
    }).then(alert('A name was submitted: '))

  }
  getFormStyle1() {

    return {
      width: 250,
      height: 40,
      borderRadius: (10, 10, 10, 10),
      marginTop: '10px',
      backgroundColor: 'Transparent',
      borderColor:'white'
    }
  }
  getLoginStyle() {
    if (this.state.isClickLogin) {
      return {
        position: 'Absolute',
        bottom: 350,
        right: 700,
        width: '20%',
        height: '33%',
        display: 'block',
        borderRadius: (15, 50, 30, 5),
        border:'2px solid'


      }
    } else {
      return {

        position: 'Absolute',
        bottom: 400,
        right: 600,
        width: '20%',
        height: '36%',
        display: 'none'
      }
    }
  }
  getSignUpStyle() {
    if (this.state.isClickSignup) {
      return {
        position: 'Absolute',
        bottom: 350,
        right: 700,
        width: '20%',
        height: '33%',
        display: 'block',
        borderRadius: (15, 50, 30, 5),
        border:'2px solid'

      }
    } else {
      return {

        position: 'Absolute',
        bottom: 400,
        right: 600,
        width: '20%',
        height: '36%',
        display: 'none'
      }
    }
  }

  render() {
    return (
      <Router>
        <div className="App">
          <Header></Header>

          <div className="App-header" >
            <button style={{
              borderRadius: (15, 50, 30, 5),
              position: 'absolute',
              background: '#383838',
              width: 100,
              height: 50,
              left: '1500px',
              top: '10px',

            }} onClick={this.handleClickSignup} >

              <div style={{
                color: 'white',
                fontSize: 20

              }}> Sign Up</div>
            </button>
            <button style={{
              border: 'none',
              position: 'absolute',
              background: 'Transparent',
              width: 100,
              height: 50,
              left: '1380px',
              top: '10px',

            }} onClick={this.handleClickLogin} >

              <div style={{
                color: 'white',
                fontSize: 20

              }}> Login </div>
            </button>
            <div style={this.getLoginStyle()}>
              <form onSubmit={this.handleSubmit} className="Field" >
                <button style={{

                  color: 'Red',
                  marginLeft: '280px',
                  border: 'none',
                  fontSize: 14,
                  backgroundColor: 'Transparent'


                }} onClick={this.handleClickClose}>X</button>
                <br></br>
                <input type="text" placeholder=" Email" name="email" onChange={this.onChange} value={this.state.email} style={this.getFormStyle1()} required />
                <br></br>
                <input type="password" placeholder="Password" name="password" onChange={this.onChange} value={this.state.password} style={this.getFormStyle1()} required />
                <br></br>
                <button type="submit" style={this.getFormStyle1()} >
                  <div style={{
                    color: 'black',
                    fontSize: 20
                  }}> Sign in
                </div>
                </button><br></br>
                <p style={{
                  color: 'black',
                  fontSize: 12,
                  textAlign: 'left',
                  paddingLeft: '48px'
                }}>not member?</p>
                <button style={{
                  position: 'absolute',
                  paddingLeft: '10px',
                  color: '#364C5F',
                  bottom: '73px',
                  left: '130px',
                  border: 'none',
                  fontSize: 14,
                  backgroundColor: 'Transparent'

                }} onClick={this.handleClickSignup}>create an account</button>
              </form>
            </div>

            <div style={this.getSignUpStyle()}>
              <form onSubmit={this.handleSubmitSignUp} className="Field" >
                <button style={{

                  color: 'Red',
                  marginLeft: '280px',
                  border: 'none',
                  fontSize: 14,
                  backgroundColor: 'Transparent'

                }} onClick={this.handleClickClose}>X</button>

                <br></br>
                <input type="text" placeholder=" Email" name="newEmail" onChange={this.onChange} value={this.state.newEmail} style={this.getFormStyle1()} required />
                <br></br>
                <input type="password" placeholder="Password" name="newPassword" onChange={this.onChange} value={this.state.newPassword} style={this.getFormStyle1()} required />
                <input type="password" placeholder="Re-Password" name="newRePassword" onChange={this.onChange} value={this.state.newRePassword} style={this.getFormStyle1()} required />

                <br></br>
                <button type="submit" style={this.getFormStyle1()} >
                  <div style={{
                    color: 'black',
                    fontSize: 20
                  }}> Start
                </div>
                </button><br></br>

              </form>
            </div>



            <button style={{
              borderRadius: (15, 50, 30, 5),
              position: 'absolute',
              background: '#383838',
              width: 350,
              height: 50,
              left: '1100px',
              top: '800px',

            }} onClick={this.handleClickSignup} >
              <div style={{
                color: 'white',
                fontSize: 20

              }}> Start Using Lirten HUB</div>
            </button>
            <Route exact path="/member" component={CardList} />
            <div style={{
              position: 'absolute',
              left: '1100px',
              top: '690px',
              fontSize: 50
            }} > Be... </div>
            <div style={{
              position: 'absolute',
              left: '1100px',
              top: '730px',
              fontSize: 50
            }} >  What you want </div>
          </div>


          <Footer></Footer>
        </div>
      </Router>
    );
  }
}

export default App; */
